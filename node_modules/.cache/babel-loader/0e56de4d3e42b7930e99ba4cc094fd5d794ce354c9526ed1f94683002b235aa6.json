{"ast":null,"code":"var _jsxFileName = \"/Users/chooiseok/Documents/GitHub/Frontend-hab-eat/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './LoginPage.css';\n// import KakaoLogin from 'react-kakao-login';\n// import NaverLogin from 'react-naver-login';\n\n// // 환경 변수에서 키 가져오기\n// const KAKAO_JAVASCRIPT_KEY = process.env.REACT_APP_KAKAO_JAVASCRIPT_KEY;\n// const NAVER_CLIENT_ID = process.env.REACT_APP_NAVER_CLIENT_ID;\n// const NAVER_CALLBACK_URL = process.env.REACT_APP_NAVER_CALLBACK_URL;\n// const KAKAO_CALLBACK_URL = process.env.REACT_APP_KAKAO_REDIRECT_URL;\n\n// const LoginPage = () => {\n//   const handleKakaoSuccess = (response) => {\n//     console.log('카카오 로그인 성공:', response);\n//     alert(`카카오 로그인 성공!`);\n//   };\n\n//   const handleKakaoFailure = (error) => {\n//     console.error('카카오 로그인 실패:', error);\n//     alert('카카오 로그인에 실패했습니다.');\n//   };\n\n//   const handleNaverSuccess = (response) => {\n//     console.log('네이버 로그인 성공:', response);\n//     alert('네이버 로그인 성공! 정보를 확인해주세요.');\n//   };\n\n//   const handleNaverFailure = (error) => {\n//     console.error('네이버 로그인 실패:', error);\n//     alert('네이버 로그인에 실패했습니다.');\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         {/* 네이버 로그인 버튼 */}\n//         <NaverLogin\n//           clientId={NAVER_CLIENT_ID} // .env에서 가져온 네이버 클라이언트 ID\n//           callbackUrl={NAVER_CALLBACK_URL} // .env에서 가져온 네이버 Redirect URL\n//           onSuccess={handleNaverSuccess}\n//           onFailure={handleNaverFailure}\n//           render={(props) => (\n//             <button className=\"login-button naver\" onClick={props.onClick}>\n//               네이버로 시작하기\n//             </button>\n//           )}\n//         />\n\n//         {/* 카카오 로그인 버튼 */}\n//         <KakaoLogin\n//           token={KAKAO_JAVASCRIPT_KEY} // .env에서 가져온 카카오 JavaScript 키\n//           onSuccess={handleKakaoSuccess}\n//           onFail={handleKakaoFailure}\n//           onLogout={() => console.log('카카오 로그아웃')}\n//           render={(props) => (\n//             <button className=\"login-button kakao\" onClick={props.onClick}>\n//               카카오로 시작하기\n//             </button>\n//           )}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n// import React from 'react';\n// import './LoginPage.css';\n\n// const LoginPage = () => {\n//   const redirectUri = 'http://localhost:3000/oauth'; // 카카오 개발자 콘솔에 등록된 Redirect URI\n//   const clientId = \"637f367d53c0975652e7451e73b761d3\"; // 카카오 REST API 키\n//   const kakaoAuthUrl = `https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}`;\n\n//   const handleKakaoLogin = () => {\n//     window.location.href = kakaoAuthUrl; // 카카오 인증 페이지로 리다이렉트\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         <button className=\"login-button kakao\" onClick={handleKakaoLogin}>\n//           카카오로 시작하기\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const redirectUri = \"http://localhost:3000/\"; // 리다이렉트 URI\n  const clientId = \"637f367d53c0975652e7451e73b761d3\"; // 카카오 REST API 키\n  const kakaoAuthUrl = `https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}`;\n  const navigate = useNavigate();\n  const handleKakaoLogin = () => {\n    window.location.href = kakaoAuthUrl; // 카카오 인증 페이지로 리다이렉트\n  };\n  const handleKakaoCallback = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get(\"code\");\n    if (code) {\n      console.log(\"카카오 로그인 성공, 인가코드:\", code);\n      onLoginSuccess(); // App.js로 성공 상태 전달\n      navigate(\"/userinfo\"); // UserInfoPage로 이동\n    } else {\n      console.error(\"카카오 로그인 실패\");\n    }\n  };\n  React.useEffect(() => {\n    handleKakaoCallback(); // 리다이렉트 URI로 돌아왔을 때 호출\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uD55C \\uC190\\uC5D0 \\uB4E4\\uACE0 \\uBA39\\uB294 \\uAC74\\uAC15\\uD55C \\uC2B5\\uAD00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./Hab-eat.png\",\n      alt: \"App Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"\\uC5EC\\uB7EC\\uBD84\\uC758 \\uC2DD\\uB2E8, \\uAC19\\uC774 \\uCC0D\\uC5B4\\uBD10\\uC694!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button kakao\",\n        onClick: handleKakaoLogin,\n        children: \"\\uCE74\\uCE74\\uC624\\uB85C \\uC2DC\\uC791\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","LoginPage","onLoginSuccess","_s","redirectUri","clientId","kakaoAuthUrl","navigate","handleKakaoLogin","window","location","href","handleKakaoCallback","urlParams","URLSearchParams","search","code","get","console","log","error","useEffect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/chooiseok/Documents/GitHub/Frontend-hab-eat/src/pages/LoginPage.js"],"sourcesContent":["// import React from 'react';\n// import './LoginPage.css';\n// import KakaoLogin from 'react-kakao-login';\n// import NaverLogin from 'react-naver-login';\n\n// // 환경 변수에서 키 가져오기\n// const KAKAO_JAVASCRIPT_KEY = process.env.REACT_APP_KAKAO_JAVASCRIPT_KEY;\n// const NAVER_CLIENT_ID = process.env.REACT_APP_NAVER_CLIENT_ID;\n// const NAVER_CALLBACK_URL = process.env.REACT_APP_NAVER_CALLBACK_URL;\n// const KAKAO_CALLBACK_URL = process.env.REACT_APP_KAKAO_REDIRECT_URL;\n\n// const LoginPage = () => {\n//   const handleKakaoSuccess = (response) => {\n//     console.log('카카오 로그인 성공:', response);\n//     alert(`카카오 로그인 성공!`);\n//   };\n\n//   const handleKakaoFailure = (error) => {\n//     console.error('카카오 로그인 실패:', error);\n//     alert('카카오 로그인에 실패했습니다.');\n//   };\n\n//   const handleNaverSuccess = (response) => {\n//     console.log('네이버 로그인 성공:', response);\n//     alert('네이버 로그인 성공! 정보를 확인해주세요.');\n//   };\n\n//   const handleNaverFailure = (error) => {\n//     console.error('네이버 로그인 실패:', error);\n//     alert('네이버 로그인에 실패했습니다.');\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         {/* 네이버 로그인 버튼 */}\n//         <NaverLogin\n//           clientId={NAVER_CLIENT_ID} // .env에서 가져온 네이버 클라이언트 ID\n//           callbackUrl={NAVER_CALLBACK_URL} // .env에서 가져온 네이버 Redirect URL\n//           onSuccess={handleNaverSuccess}\n//           onFailure={handleNaverFailure}\n//           render={(props) => (\n//             <button className=\"login-button naver\" onClick={props.onClick}>\n//               네이버로 시작하기\n//             </button>\n//           )}\n//         />\n\n//         {/* 카카오 로그인 버튼 */}\n//         <KakaoLogin\n//           token={KAKAO_JAVASCRIPT_KEY} // .env에서 가져온 카카오 JavaScript 키\n//           onSuccess={handleKakaoSuccess}\n//           onFail={handleKakaoFailure}\n//           onLogout={() => console.log('카카오 로그아웃')}\n//           render={(props) => (\n//             <button className=\"login-button kakao\" onClick={props.onClick}>\n//               카카오로 시작하기\n//             </button>\n//           )}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n// import React from 'react';\n// import './LoginPage.css';\n\n// const LoginPage = () => {\n//   const redirectUri = 'http://localhost:3000/oauth'; // 카카오 개발자 콘솔에 등록된 Redirect URI\n//   const clientId = \"637f367d53c0975652e7451e73b761d3\"; // 카카오 REST API 키\n//   const kakaoAuthUrl = `https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}`;\n\n//   const handleKakaoLogin = () => {\n//     window.location.href = kakaoAuthUrl; // 카카오 인증 페이지로 리다이렉트\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         <button className=\"login-button kakao\" onClick={handleKakaoLogin}>\n//           카카오로 시작하기\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./LoginPage.css\";\n\nconst LoginPage = ({ onLoginSuccess }) => {\n  const redirectUri = \"http://localhost:3000/\"; // 리다이렉트 URI\n  const clientId = \"637f367d53c0975652e7451e73b761d3\"; // 카카오 REST API 키\n  const kakaoAuthUrl = `https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}`;\n  const navigate = useNavigate();\n\n  const handleKakaoLogin = () => {\n    window.location.href = kakaoAuthUrl; // 카카오 인증 페이지로 리다이렉트\n  };\n\n  const handleKakaoCallback = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get(\"code\");\n\n    if (code) {\n      console.log(\"카카오 로그인 성공, 인가코드:\", code);\n      onLoginSuccess(); // App.js로 성공 상태 전달\n      navigate(\"/userinfo\"); // UserInfoPage로 이동\n    } else {\n      console.error(\"카카오 로그인 실패\");\n    }\n  };\n\n  React.useEffect(() => {\n    handleKakaoCallback(); // 리다이렉트 URI로 돌아왔을 때 호출\n  }, []);\n\n  return (\n    <div className=\"login-container\">\n      <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n      <img src=\"./Hab-eat.png\" alt=\"App Logo\" className=\"logo\" />\n      <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n      <div className=\"button-container\">\n        <button className=\"login-button kakao\" onClick={handleKakaoLogin}>\n          카카오로 시작하기\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}