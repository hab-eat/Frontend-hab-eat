{"ast":null,"code":"var _jsxFileName = \"/Users/chooiseok/Documents/GitHub/Frontend-hab-eat/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport UserInfoPage from './pages/UserInfoPage';\nimport NutritionPage from './pages/NutritionPage';\nimport NavigationBar from './components/NavigationBar';\nimport MyPage from './pages/MyPage';\nimport Settings from './pages/Settings';\nimport Guide from './pages/Guide';\nimport Notifications from './pages/Notifications';\nimport PrivacyPolicy from './pages/PrivacyPolicy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isInfoComplete, setIsInfoComplete] = useState(false);\n  const handleInfoComplete = () => {\n    setIsInfoComplete(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '80px'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: isInfoComplete ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"nutrition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(UserInfoPage, {\n            onComplete: handleInfoComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/nutrition\",\n          element: /*#__PURE__*/_jsxDEV(NutritionPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/habit\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uC2B5\\uAD00 \\uD398\\uC774\\uC9C0 \\uC900\\uBE44\\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/mypage\",\n          element: /*#__PURE__*/_jsxDEV(MyPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/settings\",\n          element: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/guide\",\n          element: /*#__PURE__*/_jsxDEV(Guide, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/settings/edit-profile\",\n          element: /*#__PURE__*/_jsxDEV(UserInfoPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/settings/notifications\",\n          element: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/settings/privacy-policy\",\n          element: /*#__PURE__*/_jsxDEV(PrivacyPolicy, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JvX2r9KAOfB2K3boT4sHTnjOKi4=\");\n_c = App;\nexport default App;\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import LoginPage from \"./pages/LoginPage\";\n// import UserInfoPage from \"./pages/UserInfoPage\";\n// import NutritionPage from \"./pages/NutritionPage\";\n// import NavigationBar from \"./components/NavigationBar\";\n// import MyPage from \"./pages/MyPage\";\n// import Settings from \"./pages/Settings\";\n// import Guide from \"./pages/Guide\";\n// import Notifications from \"./pages/Notifications\";\n// import PrivacyPolicy from \"./pages/PrivacyPolicy\";\n\n// const App = () => {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false); // 로그인 여부 상태\n//   const [isInfoComplete, setIsInfoComplete] = useState(false); // 유저 정보 입력 여부 상태\n\n//   const handleLoginSuccess = () => {\n//     setIsAuthenticated(true); // 로그인 성공 시 상태 변경\n//   };\n\n//   const handleInfoComplete = () => {\n//     setIsInfoComplete(true); // 유저 정보 입력 완료 시 상태 변경\n//     console.log(isAuthenticated,isInfoComplete)\n//   };\n\n//   return (\n//     <Router>\n//       <div style={{ paddingBottom: \"80px\" }}>\n//         <Routes>\n//           {/* 초기 화면: LoginPage */}\n//           <Route\n//             path=\"/\"\n//             element={\n//               isAuthenticated ? (\n//                 isInfoComplete ? (\n//                   <Navigate to=\"/nutrition\" />\n\n//                 ) : (\n//                   <Navigate to=\"/userinfo\" />\n//                 )\n//               ) : (\n//                 <LoginPage onLoginSuccess={handleLoginSuccess} />\n//               )\n//             }\n\n//           />\n//           <Route path=\"/userinfo\" element={<UserInfoPage onComplete={handleInfoComplete} />} />\n//           <Route path=\"/nutrition\" element={<NutritionPage />} />\n//           <Route path=\"/habit\" element={<div>습관 페이지 준비중...</div>} />\n//           <Route path=\"/mypage\" element={<MyPage />} />\n//           <Route path=\"/settings\" element={<Settings />} />\n//           <Route path=\"/guide\" element={<Guide />} />\n//           <Route path=\"/settings/edit-profile\" element={<UserInfoPage />} />\n//           <Route path=\"/settings/notifications\" element={<Notifications />} />\n//           <Route path=\"/settings/privacy-policy\" element={<PrivacyPolicy />} />\n//         </Routes>\n//         {isAuthenticated && <NavigationBar />} {/* 로그인 후에만 네비게이션 바 표시 */}\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","UserInfoPage","NutritionPage","NavigationBar","MyPage","Settings","Guide","Notifications","PrivacyPolicy","jsxDEV","_jsxDEV","App","_s","isInfoComplete","setIsInfoComplete","handleInfoComplete","children","style","paddingBottom","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","onComplete","_c","$RefreshReg$"],"sources":["/Users/chooiseok/Documents/GitHub/Frontend-hab-eat/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport UserInfoPage from './pages/UserInfoPage';\nimport NutritionPage from './pages/NutritionPage';\nimport NavigationBar from './components/NavigationBar';\nimport MyPage from './pages/MyPage';\nimport Settings from './pages/Settings';\nimport Guide from './pages/Guide';\nimport Notifications from './pages/Notifications';\nimport PrivacyPolicy from './pages/PrivacyPolicy';\n\nconst App = () => {\n  const [isInfoComplete, setIsInfoComplete] = useState(false);\n\n  const handleInfoComplete = () => {\n    setIsInfoComplete(true);\n  };\n\n  return (\n    <Router>\n      <div style={{ paddingBottom: '80px' }}> {/* 네비게이션 바 높이만큼 여백 추가 */}\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              isInfoComplete ? (\n                <Navigate to=\"nutrition\" />\n              ) : (\n                <UserInfoPage onComplete={handleInfoComplete} />\n              )\n            }\n          />\n          <Route path=\"/nutrition\" element={<NutritionPage />} />\n          <Route path=\"/habit\" element={<div>습관 페이지 준비중...</div>} />\n          <Route path=\"/mypage\" element={<MyPage />} />\n          <Route path=\"/settings\" element={<Settings />} />\n          <Route path=\"/guide\" element={<Guide />} />\n          <Route path=\"/settings/edit-profile\" element={<UserInfoPage />} />\n          <Route path=\"/settings/notifications\" element={<Notifications />} />\n          <Route path=\"/settings/privacy-policy\" element={<PrivacyPolicy />} />\n        </Routes>\n        <NavigationBar /> {/* 네비게이션 바 추가 */}\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import LoginPage from \"./pages/LoginPage\";\n// import UserInfoPage from \"./pages/UserInfoPage\";\n// import NutritionPage from \"./pages/NutritionPage\";\n// import NavigationBar from \"./components/NavigationBar\";\n// import MyPage from \"./pages/MyPage\";\n// import Settings from \"./pages/Settings\";\n// import Guide from \"./pages/Guide\";\n// import Notifications from \"./pages/Notifications\";\n// import PrivacyPolicy from \"./pages/PrivacyPolicy\";\n\n// const App = () => {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false); // 로그인 여부 상태\n//   const [isInfoComplete, setIsInfoComplete] = useState(false); // 유저 정보 입력 여부 상태\n\n//   const handleLoginSuccess = () => {\n//     setIsAuthenticated(true); // 로그인 성공 시 상태 변경\n//   };\n\n//   const handleInfoComplete = () => {\n//     setIsInfoComplete(true); // 유저 정보 입력 완료 시 상태 변경\n//     console.log(isAuthenticated,isInfoComplete)\n//   };\n\n//   return (\n//     <Router>\n//       <div style={{ paddingBottom: \"80px\" }}>\n//         <Routes>\n//           {/* 초기 화면: LoginPage */}\n//           <Route\n//             path=\"/\"\n//             element={\n//               isAuthenticated ? (\n//                 isInfoComplete ? (\n//                   <Navigate to=\"/nutrition\" />\n              \n//                 ) : (\n//                   <Navigate to=\"/userinfo\" />\n//                 )\n//               ) : (\n//                 <LoginPage onLoginSuccess={handleLoginSuccess} />\n//               )\n//             }\n              \n            \n//           />\n//           <Route path=\"/userinfo\" element={<UserInfoPage onComplete={handleInfoComplete} />} />\n//           <Route path=\"/nutrition\" element={<NutritionPage />} />\n//           <Route path=\"/habit\" element={<div>습관 페이지 준비중...</div>} />\n//           <Route path=\"/mypage\" element={<MyPage />} />\n//           <Route path=\"/settings\" element={<Settings />} />\n//           <Route path=\"/guide\" element={<Guide />} />\n//           <Route path=\"/settings/edit-profile\" element={<UserInfoPage />} />\n//           <Route path=\"/settings/notifications\" element={<Notifications />} />\n//           <Route path=\"/settings/privacy-policy\" element={<PrivacyPolicy />} />\n//         </Routes>\n//         {isAuthenticated && <NavigationBar />} {/* 로그인 후에만 네비게이션 바 표시 */}\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}