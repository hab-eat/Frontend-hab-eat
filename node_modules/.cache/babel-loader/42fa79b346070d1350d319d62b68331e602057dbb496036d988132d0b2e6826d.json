{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\32223759\\\\Desktop\\\\Habit\\\\Frontend-hab-eat\\\\src\\\\pages\\\\JoinPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport axios from 'axios'; // axios를 사용할 수 있습니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const JoinPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const id = searchParams.get('id'); // URL에서 챌린지 ID를 가져옵니다.\n\n  const handleComplete = () => {\n    // 로컬 스토리지에서 챌린지 목록을 가져오기\n    const savedChallenges = localStorage.getItem('challenges');\n    const challenges = savedChallenges ? JSON.parse(savedChallenges) : [];\n\n    // 선택한 챌린지의 상태를 'participating'으로 변경\n    const updatedChallenges = challenges.map(challenge => challenge.id === parseInt(id) ? {\n      ...challenge,\n      status: 'participating'\n    } : challenge);\n\n    // 로컬 스토리지에 업데이트된 챌린지 목록 저장\n    localStorage.setItem('challenges', JSON.stringify(updatedChallenges));\n\n    // 상태 변경 후 HabitPage로 돌아가기 (completedId를 URL 파라미터로 전달)\n    navigate(`/habit/?completedId=${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCC4C\\uB9B0\\uC9C0 \\uC2E0\\uCCAD \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC5EC\\uAE30\\uC11C \\uCC4C\\uB9B0\\uC9C0 \\uC2E0\\uCCAD \\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uBC1B\\uACE0, \\uC644\\uB8CC \\uBC84\\uD2BC\\uC744 \\uB204\\uB974\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleComplete,\n      children: \"\\uCC38\\uC5EC \\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(JoinPage, \"TWgzSyUhfR1qpSaKODBSa+lc2RA=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = JoinPage;\nexport default JoinPage;\nvar _c;\n$RefreshReg$(_c, \"JoinPage\");","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","axios","jsxDEV","_jsxDEV","JoinPage","_s","navigate","searchParams","id","get","handleComplete","savedChallenges","localStorage","getItem","challenges","JSON","parse","updatedChallenges","map","challenge","parseInt","status","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/32223759/Desktop/Habit/Frontend-hab-eat/src/pages/JoinPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport axios from 'axios'; // axios를 사용할 수 있습니다.\r\n\r\nexport const JoinPage = () => {\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const id = searchParams.get('id');  // URL에서 챌린지 ID를 가져옵니다.\r\n\r\n  const handleComplete = () => {\r\n    // 로컬 스토리지에서 챌린지 목록을 가져오기\r\n    const savedChallenges = localStorage.getItem('challenges');\r\n    const challenges = savedChallenges ? JSON.parse(savedChallenges) : [];\r\n\r\n    // 선택한 챌린지의 상태를 'participating'으로 변경\r\n    const updatedChallenges = challenges.map(challenge =>\r\n      challenge.id === parseInt(id)\r\n        ? { ...challenge, status: 'participating' }\r\n        : challenge\r\n    );\r\n\r\n    // 로컬 스토리지에 업데이트된 챌린지 목록 저장\r\n    localStorage.setItem('challenges', JSON.stringify(updatedChallenges));\r\n\r\n    // 상태 변경 후 HabitPage로 돌아가기 (completedId를 URL 파라미터로 전달)\r\n    navigate(`/habit/?completedId=${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>챌린지 신청 페이지</h1>\r\n      <p>여기서 챌린지 신청 정보를 입력받고, 완료 버튼을 누르세요.</p>\r\n      <button onClick={handleComplete}>참여 완료</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,YAAY,CAAC,GAAGP,eAAe,CAAC,CAAC;EACxC,MAAMQ,EAAE,GAAGD,YAAY,CAACE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAE;;EAEpC,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAC1D,MAAMC,UAAU,GAAGH,eAAe,GAAGI,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC,GAAG,EAAE;;IAErE;IACA,MAAMM,iBAAiB,GAAGH,UAAU,CAACI,GAAG,CAACC,SAAS,IAChDA,SAAS,CAACX,EAAE,KAAKY,QAAQ,CAACZ,EAAE,CAAC,GACzB;MAAE,GAAGW,SAAS;MAAEE,MAAM,EAAE;IAAgB,CAAC,GACzCF,SACN,CAAC;;IAED;IACAP,YAAY,CAACU,OAAO,CAAC,YAAY,EAAEP,IAAI,CAACQ,SAAS,CAACN,iBAAiB,CAAC,CAAC;;IAErE;IACAX,QAAQ,CAAC,uBAAuBE,EAAE,EAAE,CAAC;EACvC,CAAC;EAED,oBACEL,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAAsB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB1B,OAAA;MAAAsB,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACxC1B,OAAA;MAAQ2B,OAAO,EAAEpB,cAAe;MAAAe,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/BWD,QAAQ;EAAA,QACFL,WAAW,EACLC,eAAe;AAAA;AAAA+B,EAAA,GAF3B3B,QAAQ;AAiCrB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}