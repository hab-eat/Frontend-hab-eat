{"ast":null,"code":"var _jsxFileName = \"/Users/chooiseok/Documents/GitHub/Frontend-hab-eat/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './LoginPage.css';\n// import KakaoLogin from 'react-kakao-login';\n// import NaverLogin from 'react-naver-login';\n\n// // 환경 변수에서 키 가져오기\n// const KAKAO_JAVASCRIPT_KEY = process.env.REACT_APP_KAKAO_JAVASCRIPT_KEY;\n// const NAVER_CLIENT_ID = process.env.REACT_APP_NAVER_CLIENT_ID;\n// const NAVER_CALLBACK_URL = process.env.REACT_APP_NAVER_CALLBACK_URL;\n// const KAKAO_CALLBACK_URL = process.env.REACT_APP_KAKAO_REDIRECT_URL;\n\n// const LoginPage = () => {\n//   const handleKakaoSuccess = (response) => {\n//     console.log('카카오 로그인 성공:', response);\n//     alert(`카카오 로그인 성공!`);\n//   };\n\n//   const handleKakaoFailure = (error) => {\n//     console.error('카카오 로그인 실패:', error);\n//     alert('카카오 로그인에 실패했습니다.');\n//   };\n\n//   const handleNaverSuccess = (response) => {\n//     console.log('네이버 로그인 성공:', response);\n//     alert('네이버 로그인 성공! 정보를 확인해주세요.');\n//   };\n\n//   const handleNaverFailure = (error) => {\n//     console.error('네이버 로그인 실패:', error);\n//     alert('네이버 로그인에 실패했습니다.');\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         {/* 네이버 로그인 버튼 */}\n//         <NaverLogin\n//           clientId={NAVER_CLIENT_ID} // .env에서 가져온 네이버 클라이언트 ID\n//           callbackUrl={NAVER_CALLBACK_URL} // .env에서 가져온 네이버 Redirect URL\n//           onSuccess={handleNaverSuccess}\n//           onFailure={handleNaverFailure}\n//           render={(props) => (\n//             <button className=\"login-button naver\" onClick={props.onClick}>\n//               네이버로 시작하기\n//             </button>\n//           )}\n//         />\n\n//         {/* 카카오 로그인 버튼 */}\n//         <KakaoLogin\n//           token={KAKAO_JAVASCRIPT_KEY} // .env에서 가져온 카카오 JavaScript 키\n//           onSuccess={handleKakaoSuccess}\n//           onFail={handleKakaoFailure}\n//           onLogout={() => console.log('카카오 로그아웃')}\n//           render={(props) => (\n//             <button className=\"login-button kakao\" onClick={props.onClick}>\n//               카카오로 시작하기\n//             </button>\n//           )}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n// import React from 'react';\n// import './LoginPage.css';\n\n// const LoginPage = () => {\n//   const redirectUrl = process.env.REACT_APP_KAKAO_REDIRECT_URL; // 카카오 개발자 콘솔에 등록된 Redirect URI\n//   const Rest_api_key = process.env.REACT_APP_KAKAO_REST_API_KEY; // 카카오 REST API 키\n//   const kakaoAuthUrl = `https://kauth.kakao.com/oauth/authorize?client_id=${Rest_api_key}&redirect_uri=${redirectUrl}&response_type=code`;\n\n//   const handleKakaoLogin = () => {\n//     window.location.href = kakaoAuthUrl; // 카카오 인증 페이지로 이동하기\n//   };\n//   const code = new URL(window.location.href).searchParams.get(\"code\"); // 인가코드 파싱해오기\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         <button className=\"login-button kakao\" onClick={handleKakaoLogin}> \n//           카카오로 시작하기\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\nimport React, { useEffect } from \"react\";\nimport \"./LoginPage.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const redirectUrl = process.env.REACT_APP_KAKAO_REDIRECT_URL; // 카카오 Redirect URI\n  const Rest_api_key = process.env.REACT_APP_KAKAO_REST_API_KEY; // 카카오 REST API 키\n  const kakaoAuthUrl = `https://kauth.kakao.com/oauth/authorize?client_id=${Rest_api_key}&redirect_uri=${redirectUrl}&response_type=code`;\n\n  // 인가 코드 처리\n  useEffect(() => {\n    const code = new URL(window.location.href).searchParams.get(\"code\"); // URL에서 code 추출\n\n    if (code) {\n      axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/kakao/callback`, {\n        code\n      }).then(response => {\n        const {\n          snsToken\n        } = response.data; // 백엔드에서 반환된 snsToken\n        localStorage.setItem(\"snsToken\", snsToken); // snsToken을 로컬 저장\n        navigate(\"/userinfo\"); // UserInfoPage로 이동\n      }).catch(error => {\n        console.error(\"카카오 로그인 실패:\", error);\n        alert(\"카카오 로그인 실패. 다시 시도해주세요.\");\n      });\n    }\n  }, [navigate]);\n  const handleKakaoLogin = () => {\n    window.location.href = kakaoAuthUrl; // 카카오 인증 페이지로 리다이렉트\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uD55C \\uC190\\uC5D0 \\uB4E4\\uACE0 \\uBA39\\uB294 \\uAC74\\uAC15\\uD55C \\uC2B5\\uAD00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./Hab-eat.png\" // 로고 이미지\n      ,\n      alt: \"App Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"\\uC5EC\\uB7EC\\uBD84\\uC758 \\uC2DD\\uB2E8, \\uAC19\\uC774 \\uCC0D\\uC5B4\\uBD10\\uC694!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button kakao\",\n        onClick: handleKakaoLogin,\n        children: \"\\uCE74\\uCE74\\uC624\\uB85C \\uC2DC\\uC791\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","LoginPage","_s","navigate","redirectUrl","process","env","REACT_APP_KAKAO_REDIRECT_URL","Rest_api_key","REACT_APP_KAKAO_REST_API_KEY","kakaoAuthUrl","code","URL","window","location","href","searchParams","get","post","REACT_APP_BACKEND_URL","then","response","snsToken","data","localStorage","setItem","catch","error","console","alert","handleKakaoLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/chooiseok/Documents/GitHub/Frontend-hab-eat/src/pages/LoginPage.js"],"sourcesContent":["// import React from 'react';\n// import './LoginPage.css';\n// import KakaoLogin from 'react-kakao-login';\n// import NaverLogin from 'react-naver-login';\n\n// // 환경 변수에서 키 가져오기\n// const KAKAO_JAVASCRIPT_KEY = process.env.REACT_APP_KAKAO_JAVASCRIPT_KEY;\n// const NAVER_CLIENT_ID = process.env.REACT_APP_NAVER_CLIENT_ID;\n// const NAVER_CALLBACK_URL = process.env.REACT_APP_NAVER_CALLBACK_URL;\n// const KAKAO_CALLBACK_URL = process.env.REACT_APP_KAKAO_REDIRECT_URL;\n\n// const LoginPage = () => {\n//   const handleKakaoSuccess = (response) => {\n//     console.log('카카오 로그인 성공:', response);\n//     alert(`카카오 로그인 성공!`);\n//   };\n\n//   const handleKakaoFailure = (error) => {\n//     console.error('카카오 로그인 실패:', error);\n//     alert('카카오 로그인에 실패했습니다.');\n//   };\n\n//   const handleNaverSuccess = (response) => {\n//     console.log('네이버 로그인 성공:', response);\n//     alert('네이버 로그인 성공! 정보를 확인해주세요.');\n//   };\n\n//   const handleNaverFailure = (error) => {\n//     console.error('네이버 로그인 실패:', error);\n//     alert('네이버 로그인에 실패했습니다.');\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         {/* 네이버 로그인 버튼 */}\n//         <NaverLogin\n//           clientId={NAVER_CLIENT_ID} // .env에서 가져온 네이버 클라이언트 ID\n//           callbackUrl={NAVER_CALLBACK_URL} // .env에서 가져온 네이버 Redirect URL\n//           onSuccess={handleNaverSuccess}\n//           onFailure={handleNaverFailure}\n//           render={(props) => (\n//             <button className=\"login-button naver\" onClick={props.onClick}>\n//               네이버로 시작하기\n//             </button>\n//           )}\n//         />\n\n//         {/* 카카오 로그인 버튼 */}\n//         <KakaoLogin\n//           token={KAKAO_JAVASCRIPT_KEY} // .env에서 가져온 카카오 JavaScript 키\n//           onSuccess={handleKakaoSuccess}\n//           onFail={handleKakaoFailure}\n//           onLogout={() => console.log('카카오 로그아웃')}\n//           render={(props) => (\n//             <button className=\"login-button kakao\" onClick={props.onClick}>\n//               카카오로 시작하기\n//             </button>\n//           )}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n// import React from 'react';\n// import './LoginPage.css';\n\n// const LoginPage = () => {\n//   const redirectUrl = process.env.REACT_APP_KAKAO_REDIRECT_URL; // 카카오 개발자 콘솔에 등록된 Redirect URI\n//   const Rest_api_key = process.env.REACT_APP_KAKAO_REST_API_KEY; // 카카오 REST API 키\n//   const kakaoAuthUrl = `https://kauth.kakao.com/oauth/authorize?client_id=${Rest_api_key}&redirect_uri=${redirectUrl}&response_type=code`;\n\n//   const handleKakaoLogin = () => {\n//     window.location.href = kakaoAuthUrl; // 카카오 인증 페이지로 이동하기\n//   };\n//   const code = new URL(window.location.href).searchParams.get(\"code\"); // 인가코드 파싱해오기\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         <button className=\"login-button kakao\" onClick={handleKakaoLogin}> \n//           카카오로 시작하기\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\nimport React, { useEffect } from \"react\";\nimport \"./LoginPage.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const redirectUrl = process.env.REACT_APP_KAKAO_REDIRECT_URL; // 카카오 Redirect URI\n  const Rest_api_key = process.env.REACT_APP_KAKAO_REST_API_KEY; // 카카오 REST API 키\n  const kakaoAuthUrl = `https://kauth.kakao.com/oauth/authorize?client_id=${Rest_api_key}&redirect_uri=${redirectUrl}&response_type=code`;\n\n  // 인가 코드 처리\n  useEffect(() => {\n    const code = new URL(window.location.href).searchParams.get(\"code\"); // URL에서 code 추출\n\n    if (code) {\n      axios\n        .post(`${process.env.REACT_APP_BACKEND_URL}/api/kakao/callback`, { code })\n        .then((response) => {\n          const { snsToken } = response.data; // 백엔드에서 반환된 snsToken\n          localStorage.setItem(\"snsToken\", snsToken); // snsToken을 로컬 저장\n          navigate(\"/userinfo\"); // UserInfoPage로 이동\n        })\n        .catch((error) => {\n          console.error(\"카카오 로그인 실패:\", error);\n          alert(\"카카오 로그인 실패. 다시 시도해주세요.\");\n        });\n    }\n  }, [navigate]);\n\n  const handleKakaoLogin = () => {\n    window.location.href = kakaoAuthUrl; // 카카오 인증 페이지로 리다이렉트\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n      <img\n        src=\"./Hab-eat.png\" // 로고 이미지\n        alt=\"App Logo\"\n        className=\"logo\"\n      />\n      <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n      <div className=\"button-container\">\n        <button className=\"login-button kakao\" onClick={handleKakaoLogin}>\n          카카오로 시작하기\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,iBAAiB;AACxB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,4BAA4B,CAAC,CAAC;EAC9D,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACG,4BAA4B,CAAC,CAAC;EAC/D,MAAMC,YAAY,GAAG,qDAAqDF,YAAY,iBAAiBJ,WAAW,qBAAqB;;EAEvI;EACAR,SAAS,CAAC,MAAM;IACd,MAAMe,IAAI,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;;IAErE,IAAIN,IAAI,EAAE;MACRb,KAAK,CACFoB,IAAI,CAAC,GAAGb,OAAO,CAACC,GAAG,CAACa,qBAAqB,qBAAqB,EAAE;QAAER;MAAK,CAAC,CAAC,CACzES,IAAI,CAAEC,QAAQ,IAAK;QAClB,MAAM;UAAEC;QAAS,CAAC,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC;QACpCC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAAC,CAAC,CAAC;QAC5CnB,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,CACDuB,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;QACnCE,KAAK,CAAC,wBAAwB,CAAC;MACjC,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAAC1B,QAAQ,CAAC,CAAC;EAEd,MAAM2B,gBAAgB,GAAGA,CAAA,KAAM;IAC7BjB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGL,YAAY,CAAC,CAAC;EACvC,CAAC;EAED,oBACEV,OAAA;IAAK+B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BhC,OAAA;MAAI+B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CpC,OAAA;MACEqC,GAAG,EAAC,eAAe,CAAC;MAAA;MACpBC,GAAG,EAAC,UAAU;MACdP,SAAS,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACFpC,OAAA;MAAG+B,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7CpC,OAAA;MAAK+B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BhC,OAAA;QAAQ+B,SAAS,EAAC,oBAAoB;QAACQ,OAAO,EAAET,gBAAiB;QAAAE,QAAA,EAAC;MAElE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CA7CID,SAAS;EAAA,QACIJ,WAAW;AAAA;AAAA2C,EAAA,GADxBvC,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}