{"ast":null,"code":"var _jsxFileName = \"/Users/chooiseok/Documents/GitHub/Frontend-hab-eat/src/pages/LoginPage.js\";\n// import React from 'react';\n// import './LoginPage.css';\n// import KakaoLogin from 'react-kakao-login';\n\n// const LoginPage = () => {\n//   const handleSuccess = (response) => {\n//     console.log('카카오 로그인 성공:', response);\n//   };\n\n//   const handleFailure = (error) => {\n//     console.error('카카오 로그인 실패:', error);\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 logo.png 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">\n//         여러분의 식단, 같이 찍어봐요!\n//       </p>\n//       <div className=\"button-container\">\n//         <button className=\"login-button naver\">네이버로 시작하기</button>\n//         <button className=\"login-button kakao\">카카오로 시작하기</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\n// import React from 'react';\n// import './LoginPage.css';\n// import KakaoLogin from 'react-kakao-login'; // 카카오 로그인 라이브러리 임포트\n\n// const LoginPage = () => {\n//   const handleKakaoSuccess = (response) => {\n//     console.log('카카오 로그인 성공:', response);\n\n//     alert(`카카오 로그인 성공! 닉네임: ${response.profile.properties.nickname}`);\n//   };\n\n//   const handleKakaoFailure = (error) => {\n//     console.error('카카오 로그인 실패:', error);\n//     alert('카카오 로그인에 실패했습니다.');\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 logo.png 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         {/* 네이버 버튼 */}\n//         <button className=\"login-button naver\">네이버로 시작하기</button>\n\n//         {/* 카카오 로그인 버튼 */}\n//         <KakaoLogin\n//           token=\"6668803810c5ef2fa19eb935be883747\" // 카카오 개발자 콘솔에서 발급받은 JavaScript 키\n//           onSuccess={handleKakaoSuccess}\n//           onFail={handleKakaoFailure}\n//           onLogout={() => console.log('카카오 로그아웃')}\n//           render={(props) => (\n//             <button className=\"login-button kakao\" onClick={props.onClick}>\n//               카카오로 시작하기\n//             </button>\n//           )}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\nimport React from 'react';\nimport './LoginPage.css';\nimport KakaoLogin from 'react-kakao-login';\nimport NaverLogin from 'react-naver-login';\n\n// // 환경 변수에서 키 가져오기\n// const KAKAO_JAVASCRIPT_KEY = process.env.REACT_APP_KAKAO_JAVASCRIPT_KEY;\n// const NAVER_CLIENT_ID = process.env.REACT_APP_NAVER_CLIENT_ID;\n// const NAVER_CALLBACK_URL = process.env.REACT_APP_NAVER_CALLBACK_URL;\n// const KAKAO_CALLBACK_URL = process.env.REACT_APP_KAKAO_REDIRECT_URL;\n\n// const LoginPage = () => {\n//   const handleKakaoSuccess = (response) => {\n//     console.log('카카오 로그인 성공:', response);\n//     alert(`카카오 로그인 성공!}`);\n//   };\n\n//   const handleKakaoFailure = (error) => {\n//     console.error('카카오 로그인 실패:', error);\n//     alert('카카오 로그인에 실패했습니다.');\n//   };\n\n//   const handleNaverSuccess = (response) => {\n//     console.log('네이버 로그인 성공:', response);\n//     alert('네이버 로그인 성공! 정보를 확인해주세요.');\n//   };\n\n//   const handleNaverFailure = (error) => {\n//     console.error('네이버 로그인 실패:', error);\n//     alert('네이버 로그인에 실패했습니다.');\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         {/* 네이버 로그인 버튼 */}\n//         <NaverLogin\n//           clientId={NAVER_CLIENT_ID} // .env에서 가져온 네이버 클라이언트 ID\n//           callbackUrl={NAVER_CALLBACK_URL} // .env에서 가져온 네이버 Redirect URL\n//           onSuccess={handleNaverSuccess}\n//           onFailure={handleNaverFailure}\n//           render={(props) => (\n//             <button className=\"login-button naver\" onClick={props.onClick}>\n//               네이버로 시작하기\n//             </button>\n//           )}\n//         />\n\n//         {/* 카카오 로그인 버튼 */}\n//         <KakaoLogin\n//           token={KAKAO_JAVASCRIPT_KEY} // .env에서 가져온 카카오 JavaScript 키\n//           onSuccess={handleKakaoSuccess}\n//           onFail={handleKakaoFailure}\n//           onLogout={() => console.log('카카오 로그아웃')}\n//           render={(props) => (\n//             <button className=\"login-button kakao\" onClick={props.onClick}>\n//               카카오로 시작하기\n//             </button>\n//           )}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const REST_API_KEY = '637f367d53c0975652e7451e73b761d3';\n  const REDIRECT_URI = 'http://localhost:3000/oauth';\n  const link = `https://kauth.kakao.com/oauth/authorize?client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&response_type=code`;\n  const loginHandler = () => {\n    window.location.href = link;\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: loginHandler,\n    children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uAE30\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","KakaoLogin","NaverLogin","jsxDEV","_jsxDEV","Login","REST_API_KEY","REDIRECT_URI","link","loginHandler","window","location","href","type","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chooiseok/Documents/GitHub/Frontend-hab-eat/src/pages/LoginPage.js"],"sourcesContent":["// import React from 'react';\n// import './LoginPage.css';\n// import KakaoLogin from 'react-kakao-login';\n\n// const LoginPage = () => {\n//   const handleSuccess = (response) => {\n//     console.log('카카오 로그인 성공:', response);\n//   };\n\n//   const handleFailure = (error) => {\n//     console.error('카카오 로그인 실패:', error);\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n     \n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 logo.png 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">\n//         여러분의 식단, 같이 찍어봐요!\n//       </p>\n//       <div className=\"button-container\">\n//         <button className=\"login-button naver\">네이버로 시작하기</button>\n//         <button className=\"login-button kakao\">카카오로 시작하기</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\n\n// import React from 'react';\n// import './LoginPage.css';\n// import KakaoLogin from 'react-kakao-login'; // 카카오 로그인 라이브러리 임포트\n\n// const LoginPage = () => {\n//   const handleKakaoSuccess = (response) => {\n//     console.log('카카오 로그인 성공:', response);\n  \n//     alert(`카카오 로그인 성공! 닉네임: ${response.profile.properties.nickname}`);\n//   };\n\n//   const handleKakaoFailure = (error) => {\n//     console.error('카카오 로그인 실패:', error);\n//     alert('카카오 로그인에 실패했습니다.');\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 logo.png 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         {/* 네이버 버튼 */}\n//         <button className=\"login-button naver\">네이버로 시작하기</button>\n\n//         {/* 카카오 로그인 버튼 */}\n//         <KakaoLogin\n//           token=\"6668803810c5ef2fa19eb935be883747\" // 카카오 개발자 콘솔에서 발급받은 JavaScript 키\n//           onSuccess={handleKakaoSuccess}\n//           onFail={handleKakaoFailure}\n//           onLogout={() => console.log('카카오 로그아웃')}\n//           render={(props) => (\n//             <button className=\"login-button kakao\" onClick={props.onClick}>\n//               카카오로 시작하기\n//             </button>\n//           )}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\nimport React from 'react';\nimport './LoginPage.css';\nimport KakaoLogin from 'react-kakao-login';\nimport NaverLogin from 'react-naver-login';\n\n// // 환경 변수에서 키 가져오기\n// const KAKAO_JAVASCRIPT_KEY = process.env.REACT_APP_KAKAO_JAVASCRIPT_KEY;\n// const NAVER_CLIENT_ID = process.env.REACT_APP_NAVER_CLIENT_ID;\n// const NAVER_CALLBACK_URL = process.env.REACT_APP_NAVER_CALLBACK_URL;\n// const KAKAO_CALLBACK_URL = process.env.REACT_APP_KAKAO_REDIRECT_URL;\n\n// const LoginPage = () => {\n//   const handleKakaoSuccess = (response) => {\n//     console.log('카카오 로그인 성공:', response);\n//     alert(`카카오 로그인 성공!}`);\n//   };\n\n//   const handleKakaoFailure = (error) => {\n//     console.error('카카오 로그인 실패:', error);\n//     alert('카카오 로그인에 실패했습니다.');\n//   };\n\n//   const handleNaverSuccess = (response) => {\n//     console.log('네이버 로그인 성공:', response);\n//     alert('네이버 로그인 성공! 정보를 확인해주세요.');\n//   };\n\n//   const handleNaverFailure = (error) => {\n//     console.error('네이버 로그인 실패:', error);\n//     alert('네이버 로그인에 실패했습니다.');\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h1 className=\"title\">한 손에 들고 먹는 건강한 습관</h1>\n//       <img\n//         src=\"./Hab-eat.png\" // 로고 이미지 경로 (public 폴더에 추가)\n//         alt=\"App Logo\"\n//         className=\"logo\"\n//       />\n//       <p className=\"subtitle\">여러분의 식단, 같이 찍어봐요!</p>\n//       <div className=\"button-container\">\n//         {/* 네이버 로그인 버튼 */}\n//         <NaverLogin\n//           clientId={NAVER_CLIENT_ID} // .env에서 가져온 네이버 클라이언트 ID\n//           callbackUrl={NAVER_CALLBACK_URL} // .env에서 가져온 네이버 Redirect URL\n//           onSuccess={handleNaverSuccess}\n//           onFailure={handleNaverFailure}\n//           render={(props) => (\n//             <button className=\"login-button naver\" onClick={props.onClick}>\n//               네이버로 시작하기\n//             </button>\n//           )}\n//         />\n\n//         {/* 카카오 로그인 버튼 */}\n//         <KakaoLogin\n//           token={KAKAO_JAVASCRIPT_KEY} // .env에서 가져온 카카오 JavaScript 키\n//           onSuccess={handleKakaoSuccess}\n//           onFail={handleKakaoFailure}\n//           onLogout={() => console.log('카카오 로그아웃')}\n//           render={(props) => (\n//             <button className=\"login-button kakao\" onClick={props.onClick}>\n//               카카오로 시작하기\n//             </button>\n//           )}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\nconst Login = () => {\n  const REST_API_KEY = '637f367d53c0975652e7451e73b761d3';\n  const REDIRECT_URI = 'http://localhost:3000/oauth';\n  const link = `https://kauth.kakao.com/oauth/authorize?client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&response_type=code`;\n\n  const loginHandler = () => {\n    window.location.href = link;\n  };\n\n  return (\n    <button type='button' onClick={loginHandler}>\n      로그인 하기\n    </button>\n  );\n};\nexport default Login;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,UAAU,MAAM,mBAAmB;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAMC,YAAY,GAAG,kCAAkC;EACvD,MAAMC,YAAY,GAAG,6BAA6B;EAClD,MAAMC,IAAI,GAAG,qDAAqDF,YAAY,iBAAiBC,YAAY,qBAAqB;EAEhI,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,IAAI;EAC7B,CAAC;EAED,oBACEJ,OAAA;IAAQS,IAAI,EAAC,QAAQ;IAACC,OAAO,EAAEL,YAAa;IAAAM,QAAA,EAAC;EAE7C;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GAdIf,KAAK;AAeX,eAAeA,KAAK;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}