{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\32223759\\\\Desktop\\\\Habit\\\\Frontend-hab-eat\\\\src\\\\pages\\\\ChallengePage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport styled from 'styled-components';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCalendar = styled(Calendar)`\n\n  .react-calendar__tile {\n    background-color: #fdfdfd;\n    color: #000;\n  }\n\n  .react-calendar__tile--now {\n    background-color: #ffeb3b;\n    font-weight: bold;\n    color: #000;\n  }\n\n  .react-calendar__tile--active {\n    background-color: #00C5A1;\n    color: white;\n  }\n\n  .react-calendar__navigation__label {\n  font-size: 16px;\n  font-weight: bold;\n  color: #00C5A1\n  white-space: nowrap; /* 줄바꿈 방지 */\n  display: flex; /* 텍스트를 가로로 정렬 */\n  justify-content: center; /* 중앙 정렬 */\n  gap: 5px; /* 년과 월 사이에 간격 추가 */\n;\n}\n.react-calendar__navigation__arrow {\n  background-color: transparent;\n  border: none;\n  color: #00C5A1\n;\n}\n\n`;\n_c = StyledCalendar;\nconst ChallengePage = () => {\n  _s();\n  const [date, setDate] = React.useState(new Date());\n  const handleDateChange = newDate => {\n    setDate(newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCC4C\\uB9B0\\uC9C0 \\uAD00\\uB9AC \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledCalendar, {\n      onChange: handleDateChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ChallengePage, \"rW+rxy2mJ1oFEB1Cqg4Z2uVJym0=\");\n_c2 = ChallengePage;\nexport default ChallengePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledCalendar\");\n$RefreshReg$(_c2, \"ChallengePage\");","map":{"version":3,"names":["React","Calendar","styled","jsxDEV","_jsxDEV","StyledCalendar","_c","ChallengePage","_s","date","setDate","useState","Date","handleDateChange","newDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","_c2","$RefreshReg$"],"sources":["C:/Users/32223759/Desktop/Habit/Frontend-hab-eat/src/pages/ChallengePage.js"],"sourcesContent":["import React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport styled from 'styled-components';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst StyledCalendar = styled(Calendar)`\r\n\r\n  .react-calendar__tile {\r\n    background-color: #fdfdfd;\r\n    color: #000;\r\n  }\r\n\r\n  .react-calendar__tile--now {\r\n    background-color: #ffeb3b;\r\n    font-weight: bold;\r\n    color: #000;\r\n  }\r\n\r\n  .react-calendar__tile--active {\r\n    background-color: #00C5A1;\r\n    color: white;\r\n  }\r\n\r\n  .react-calendar__navigation__label {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: #00C5A1\r\n  white-space: nowrap; /* 줄바꿈 방지 */\r\n  display: flex; /* 텍스트를 가로로 정렬 */\r\n  justify-content: center; /* 중앙 정렬 */\r\n  gap: 5px; /* 년과 월 사이에 간격 추가 */\r\n;\r\n}\r\n.react-calendar__navigation__arrow {\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #00C5A1\r\n;\r\n}\r\n\r\n`;\r\n\r\nconst ChallengePage = () => {\r\n  const [date, setDate] = React.useState(new Date());\r\n\r\n  const handleDateChange = (newDate) => {\r\n    setDate(newDate);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>챌린지 관리 페이지</h1>\r\n\r\n      {/* StyledCalendar 사용 */}\r\n      <StyledCalendar\r\n        onChange={handleDateChange}\r\n        value={date}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChallengePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGH,MAAM,CAACD,QAAQ,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,EAAA,GAnCID,cAAc;AAqCpB,MAAME,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;EAElD,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpCJ,OAAO,CAACI,OAAO,CAAC;EAClB,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGnBhB,OAAA,CAACC,cAAc;MACbgB,QAAQ,EAAER,gBAAiB;MAC3BS,KAAK,EAAEb;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACZ,EAAA,CAlBID,aAAa;AAAAgB,GAAA,GAAbhB,aAAa;AAoBnB,eAAeA,aAAa;AAAC,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}