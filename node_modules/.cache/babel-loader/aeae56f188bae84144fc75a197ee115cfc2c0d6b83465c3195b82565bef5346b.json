{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\32223759\\\\Desktop\\\\Habit\\\\Frontend-hab-eat\\\\src\\\\pages\\\\ChallengePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChallengePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [date, setDate] = useState(new Date()); // 현재 날짜를 기본값으로 설정\n\n  const handleDateChange = newDate => {\n    setDate(newDate); // 사용자가 선택한 날짜로 상태 변경\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCC4C\\uB9B0\\uC9C0 \\uAD00\\uB9AC \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uCC4C\\uB9B0\\uC9C0 \\uAD00\\uB9AC\\uC5D0 \\uD544\\uC694\\uD55C \\uB0A0\\uC9DC\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleDateChange // 날짜 선택 시 처리할 함수\n      ,\n      value: date // 현재 선택된 날짜\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC120\\uD0DD\\uD55C \\uB0A0\\uC9DC: \", date.toDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ChallengePage, \"uAKXdiJJS0RjZAzueKFCxgkMugw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ChallengePage;\nexport default ChallengePage;\nvar _c;\n$RefreshReg$(_c, \"ChallengePage\");","map":{"version":3,"names":["React","useState","Calendar","useNavigate","useLocation","jsxDEV","_jsxDEV","ChallengePage","_s","navigate","location","date","setDate","Date","handleDateChange","newDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","toDateString","_c","$RefreshReg$"],"sources":["C:/Users/32223759/Desktop/Habit/Frontend-hab-eat/src/pages/ChallengePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst ChallengePage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [date, setDate] = useState(new Date()); // 현재 날짜를 기본값으로 설정\r\n\r\n  const handleDateChange = (newDate) => {\r\n    setDate(newDate); // 사용자가 선택한 날짜로 상태 변경\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>챌린지 관리 페이지</h1>\r\n      <p>챌린지 관리에 필요한 날짜를 선택하세요</p>\r\n      \r\n      {/* 달력 컴포넌트 */}\r\n      <Calendar\r\n        onChange={handleDateChange}  // 날짜 선택 시 처리할 함수\r\n        value={date}  // 현재 선택된 날짜\r\n      />\r\n      \r\n      <p>선택한 날짜: {date.toDateString()}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChallengePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AACzC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAIY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE9C,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpCH,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC;EACpB,CAAC;EACD,oBACET,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBX,OAAA;MAAAW,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBf,OAAA;MAAAW,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAG5Bf,OAAA,CAACJ,QAAQ;MACPoB,QAAQ,EAAER,gBAAiB,CAAE;MAAA;MAC7BS,KAAK,EAAEZ,IAAK,CAAE;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eAEFf,OAAA;MAAAW,QAAA,GAAG,mCAAQ,EAACN,IAAI,CAACa,YAAY,CAAC,CAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACb,EAAA,CAvBID,aAAa;EAAA,QACAJ,WAAW,EACXC,WAAW;AAAA;AAAAqB,EAAA,GAFxBlB,aAAa;AAyBnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}