{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\32223759\\\\Desktop\\\\Habit\\\\Frontend-hab-eat\\\\src\\\\pages\\\\HabitPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\nimport React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport \"./HabitPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HabitPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [challenges, setChallenges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [challenges, setChallenges] = useState([\n  //   { id: 1, title: '매일 운동', status: 'available' },\n  //   { id: 2, title: '건강식 챌린지', status: 'available' },\n  //   { id: 3, title: '미라클 모닝', status: 'available' },\n  // ]);\n\n  // API 호출 함수\n  const fetchChallenges = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/challenges'); // API URL 수정 필요\n      const data = await response.json();\n\n      // API에서 가져온 데이터를 상태로 설정\n      const formattedChallenges = [...data.availableChallenges.map(challenge => ({\n        id: challenge.id,\n        title: challenge.name,\n        description: challenge.description,\n        status: 'available'\n      })), ...data.ongingChallenges.map(challenge => ({\n        id: challenge.id,\n        title: challenge.name,\n        description: challenge.description,\n        status: 'participating',\n        startDate: challenge.startDate,\n        endDate: challenge.endDate,\n        goalDays: challenge.goalDays,\n        successDays: challenge.successDays\n      }))];\n      setChallenges(formattedChallenges);\n    } catch (error) {\n      console.error('Failed to fetch challenges:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchChallenges();\n  }, []);\n\n  // 월요일인지 구분\n  //   const isMonday = new Date().getDay() === 1;\n  const isMonday = true;\n\n  // 월요일인지 판단 후 신청 페이지로 넘어가기\n  const joinChallenge = id => {\n    if (isMonday) {\n      // 월요일이면 신청 페이지로 넘어감\n      navigate(`/join?id=${id}`, {\n        state: {\n          id\n        }\n      });\n    } else {\n      // 월요일이 아니면 경고만 표시\n      alert(\"월요일에 참여해주세요!\");\n    }\n  };\n\n  // 참여 완료 후 돌아올 때 해당 챌린지 상태 업데이트\n  useEffect(() => {\n    // console.log(location.state);\n    // console.log(location.state.participatedChallengeId);\n    if (location.state && location.state.participatedChallengeId) {\n      const participatedId = location.state.participatedChallengeId;\n      setChallenges(prevChallenges => prevChallenges.map(challenge => challenge.id === participatedId ? {\n        ...challenge,\n        status: 'participating'\n      } : challenge));\n      // 상태를 반영한 뒤, 주소 상태를 초기화하여 새로고침 시 재적용 안 되도록 함\n      //   navigate('/habit');\n      navigate('/habit', {\n        replace: true\n      });\n    }\n  }, [location.state, navigate]);\n  const manageChallenge = id => {\n    console.log(id);\n    navigate(`/challenge?id=${id}`, {\n      state: {\n        id\n      }\n    });\n  };\n\n  // 참여 중, 참여 가능 챌린지 구분\n  const participatingChallenges = challenges.filter(challenge => challenge.status === 'participating');\n  const availableChallenges = challenges.filter(challenge => challenge.status === 'available');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uC2B5\\uAD00 \\uCC4C\\uB9B0\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCC38\\uC5EC \\uC911\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: participatingChallenges.length > 0 ? participatingChallenges.map(challenge => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => manageChallenge(challenge.id),\n            children: [challenge.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, challenge.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"al\",\n            children: \"\\uCC38\\uC5EC \\uC911\\uC778 \\uCC4C\\uB9B0\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCC38\\uC5EC \\uAC00\\uB2A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableChallenges.length > 0 ? availableChallenges.map(challenge => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => joinChallenge(challenge.id),\n            children: challenge.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)\n        }, challenge.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"al\",\n            children: \"\\uCC38\\uC5EC \\uAC00\\uB2A5\\uD55C \\uCC4C\\uB9B0\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitPage, \"Mj4huaEiNC3XZWvTK4JLQoE9xwU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = HabitPage;\nexport default HabitPage;\nvar _c;\n$RefreshReg$(_c, \"HabitPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","HabitPage","_s","navigate","location","challenges","setChallenges","loading","setLoading","fetchChallenges","response","fetch","data","json","formattedChallenges","availableChallenges","map","challenge","id","title","name","description","status","ongingChallenges","startDate","endDate","goalDays","successDays","error","console","isMonday","joinChallenge","state","alert","participatedChallengeId","participatedId","prevChallenges","replace","manageChallenge","log","participatingChallenges","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/32223759/Desktop/Habit/Frontend-hab-eat/src/pages/HabitPage.js"],"sourcesContent":["// import React, { useState } from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport \"./HabitPage.css\";\r\n\r\nexport const HabitPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  const [challenges, setChallenges] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // const [challenges, setChallenges] = useState([\r\n  //   { id: 1, title: '매일 운동', status: 'available' },\r\n  //   { id: 2, title: '건강식 챌린지', status: 'available' },\r\n  //   { id: 3, title: '미라클 모닝', status: 'available' },\r\n  // ]);\r\n\r\n  // API 호출 함수\r\n  const fetchChallenges = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/challenges'); // API URL 수정 필요\r\n      const data = await response.json();\r\n\r\n      // API에서 가져온 데이터를 상태로 설정\r\n      const formattedChallenges = [\r\n        ...data.availableChallenges.map(challenge => ({\r\n          id: challenge.id,\r\n          title: challenge.name,\r\n          description: challenge.description,\r\n          status: 'available',\r\n        })),\r\n        ...data.ongingChallenges.map(challenge => ({\r\n          id: challenge.id,\r\n          title: challenge.name,\r\n          description: challenge.description,\r\n          status: 'participating',\r\n          startDate: challenge.startDate,\r\n          endDate: challenge.endDate,\r\n          goalDays: challenge.goalDays,\r\n          successDays: challenge.successDays,\r\n        })),\r\n      ];\r\n\r\n      setChallenges(formattedChallenges);\r\n    } catch (error) {\r\n      console.error('Failed to fetch challenges:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChallenges();\r\n  }, []);\r\n\r\n\r\n  // 월요일인지 구분\r\n//   const isMonday = new Date().getDay() === 1;\r\n  const isMonday = true;\r\n\r\n  // 월요일인지 판단 후 신청 페이지로 넘어가기\r\n  const joinChallenge = (id) => {\r\n    if (isMonday) {\r\n      // 월요일이면 신청 페이지로 넘어감\r\n      navigate(`/join?id=${id}`, { state: { id } });\r\n    } else {\r\n      // 월요일이 아니면 경고만 표시\r\n      alert(\"월요일에 참여해주세요!\");\r\n    }\r\n  };\r\n\r\n  // 참여 완료 후 돌아올 때 해당 챌린지 상태 업데이트\r\n  useEffect(() => {\r\n    // console.log(location.state);\r\n    // console.log(location.state.participatedChallengeId);\r\n    if (location.state && location.state.participatedChallengeId) {\r\n      const participatedId = location.state.participatedChallengeId;\r\n      setChallenges(prevChallenges =>\r\n        prevChallenges.map(challenge =>\r\n          challenge.id === participatedId \r\n            ? { ...challenge, status: 'participating' }\r\n            : challenge\r\n        )\r\n      );\r\n      // 상태를 반영한 뒤, 주소 상태를 초기화하여 새로고침 시 재적용 안 되도록 함\r\n    //   navigate('/habit');\r\n      navigate('/habit', { replace: true });\r\n    }\r\n  }, [location.state, navigate]);\r\n\r\n  const manageChallenge = (id) => {\r\n    console.log(id);\r\n    navigate(`/challenge?id=${id}`, { state: { id } });\r\n  };\r\n\r\n  // 참여 중, 참여 가능 챌린지 구분\r\n  const participatingChallenges = challenges.filter(challenge => challenge.status === 'participating');\r\n  const availableChallenges = challenges.filter(challenge => challenge.status === 'available');\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className='title'>습관 챌린지</h1>\r\n      \r\n      <div className=\"section\">\r\n        <h2>참여 중</h2>\r\n        <ul>\r\n          {participatingChallenges.length > 0 ? (\r\n            participatingChallenges.map(challenge => (\r\n              <li key={challenge.id}>\r\n                <button onClick={() => manageChallenge(challenge.id)}>{challenge.title} </button>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <li>\r\n              <p className='al'>참여 중인 챌린지가 없습니다.</p>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"section\">\r\n        <h2>참여 가능</h2>\r\n        <ul>\r\n          {availableChallenges.length > 0 ? (\r\n            availableChallenges.map(challenge => (\r\n              <li key={challenge.id}>\r\n                <button onClick={() => joinChallenge(challenge.id)}>\r\n                  {challenge.title} \r\n                </button>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <li>\r\n              <p className='al'>참여 가능한 챌린지가 없습니다.</p>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HabitPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}