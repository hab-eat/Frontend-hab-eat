{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\32223759\\\\Desktop\\\\Habit\\\\Frontend-hab-eat\\\\src\\\\pages\\\\HabitPage.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\nimport React, { useState } from 'react';\nimport \"./HabitPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HabitPage = () => {\n  _s();\n  // 챌린지 데이터 (참여 중 / 참여 가능 상태 포함)\n  const [challenges, setChallenges] = useState([{\n    id: 1,\n    title: '매일 운동',\n    status: 'available'\n  }, {\n    id: 2,\n    title: '건강식 챌린지',\n    status: 'available'\n  }, {\n    id: 3,\n    title: '물 많이 마시기',\n    status: 'participating'\n  }]);\n\n  // 월요일 체크\n  const isMonday = new Date().getDay() === 1;\n\n  // 챌린지 참여 함수\n  const joinChallenge = id => {\n    if (!isMonday) {\n      alert(\"월요일에 참여해주세요!\");\n      // 월요일이 아니면 신청 페이지로 이동 (예: `/join`으로 리디렉션)\n      return;\n    }\n\n    // 참여 가능 목록에서 선택된 챌린지를 참여 중으로 변경\n    setChallenges(prevChallenges => prevChallenges.map(challenge => challenge.id === id && challenge.status === 'available' ? {\n      ...challenge,\n      status: 'participating'\n    } : challenge));\n  };\n\n  // 참여 중 챌린지 목록\n  const participatingChallenges = challenges.filter(challenge => challenge.status === 'participating');\n\n  // 참여 가능 챌린지 목록\n  const availableChallenges = challenges.filter(challenge => challenge.status === 'available');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC2B5\\uAD00 \\uCC4C\\uB9B0\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCC38\\uC5EC \\uC911\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: participatingChallenges.length > 0 ? participatingChallenges.map(challenge => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [challenge.title, \" (\\uCC38\\uC5EC \\uC911)\"]\n        }, challenge.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\uCC38\\uC5EC \\uC911\\uC778 \\uCC4C\\uB9B0\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCC38\\uC5EC \\uAC00\\uB2A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableChallenges.length > 0 ? availableChallenges.map(challenge => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [challenge.title, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => joinChallenge(challenge.id),\n            children: \"\\uCC38\\uC5EC\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, challenge.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\uCC38\\uC5EC \\uAC00\\uB2A5\\uD55C \\uCC4C\\uB9B0\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitPage, \"VFLPxOaDtTtF6F70JshLbgAy74E=\");\n_c = HabitPage;\nexport default HabitPage;\nvar _c;\n$RefreshReg$(_c, \"HabitPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HabitPage","_s","challenges","setChallenges","id","title","status","isMonday","Date","getDay","joinChallenge","alert","prevChallenges","map","challenge","participatingChallenges","filter","availableChallenges","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/32223759/Desktop/Habit/Frontend-hab-eat/src/pages/HabitPage.js"],"sourcesContent":["// import React from \"react\";\r\nimport React, { useState } from 'react';\r\nimport \"./HabitPage.css\";\r\n\r\nexport const HabitPage = () => {\r\n  // 챌린지 데이터 (참여 중 / 참여 가능 상태 포함)\r\n  const [challenges, setChallenges] = useState([\r\n    { id: 1, title: '매일 운동', status: 'available' },\r\n    { id: 2, title: '건강식 챌린지', status: 'available' },\r\n    { id: 3, title: '물 많이 마시기', status: 'participating' },\r\n  ]);\r\n\r\n  // 월요일 체크\r\n  const isMonday = new Date().getDay() === 1;\r\n\r\n  // 챌린지 참여 함수\r\n  const joinChallenge = (id) => {\r\n    if (!isMonday) {\r\n      alert(\"월요일에 참여해주세요!\");\r\n      // 월요일이 아니면 신청 페이지로 이동 (예: `/join`으로 리디렉션)\r\n      return;\r\n    }\r\n\r\n    // 참여 가능 목록에서 선택된 챌린지를 참여 중으로 변경\r\n    setChallenges(prevChallenges =>\r\n      prevChallenges.map(challenge =>\r\n        challenge.id === id && challenge.status === 'available'\r\n          ? { ...challenge, status: 'participating' }\r\n          : challenge\r\n      )\r\n    );\r\n  };\r\n\r\n  // 참여 중 챌린지 목록\r\n  const participatingChallenges = challenges.filter(challenge => challenge.status === 'participating');\r\n  \r\n  // 참여 가능 챌린지 목록\r\n  const availableChallenges = challenges.filter(challenge => challenge.status === 'available');\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>습관 챌린지</h1>\r\n      \r\n      <div className=\"section\">\r\n        <h2>참여 중</h2>\r\n        <ul>\r\n          {participatingChallenges.length > 0 ? (\r\n            participatingChallenges.map(challenge => (\r\n              <li key={challenge.id}>\r\n                {challenge.title} (참여 중)\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <li>참여 중인 챌린지가 없습니다.</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"section\">\r\n        <h2>참여 가능</h2>\r\n        <ul>\r\n          {availableChallenges.length > 0 ? (\r\n            availableChallenges.map(challenge => (\r\n              <li key={challenge.id}>\r\n                {challenge.title}\r\n                <button onClick={() => joinChallenge(challenge.id)}>참여하기</button>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <li>참여 가능한 챌린지가 없습니다.</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HabitPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}