{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\32223759\\\\Desktop\\\\Habit\\\\Frontend-hab-eat\\\\src\\\\pages\\\\HabitPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\nimport React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport \"./HabitPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HabitPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [challenges, setChallenges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [challenges, setChallenges] = useState([\n  //   { id: 1, title: '매일 운동', status: 'available' },\n  //   { id: 2, title: '건강식 챌린지', status: 'available' },\n  //   { id: 3, title: '미라클 모닝', status: 'available' },\n  // ]);\n\n  // // API 호출 함수\n  // const fetchChallenges = async () => {\n  //   try {\n  //     setLoading(true);\n  //     const response = await fetch('/api/challenges'); // API URL 수정 필요\n  //     const data = await response.json();\n\n  //     // API에서 가져온 데이터를 상태로 설정\n  //     const formattedChallenges = [\n  //       ...data.availableChallenges.map(challenge => ({\n  //         id: challenge.id,\n  //         title: challenge.name,\n  //         description: challenge.description,\n  //         status: 'available',\n  //       })),\n  //       ...data.ongingChallenges.map(challenge => ({\n  //         id: challenge.id,\n  //         title: challenge.name,\n  //         description: challenge.description,\n  //         status: 'participating',\n  //         startDate: challenge.startDate,\n  //         endDate: challenge.endDate,\n  //         goalDays: challenge.goalDays,\n  //         successDays: challenge.successDays,\n  //       })),\n  //     ];\n\n  //     setChallenges(formattedChallenges);\n  //   } catch (error) {\n  //     console.error('Failed to fetch challenges:', error);\n  //   } finally {\n  //     setLoading(false);\n  //   }\n  // };\n\n  const fetchChallenges = async () => {\n    try {\n      setLoading(true);\n      const responseAvailable = await fetch('http://localhost:3001/availableChallenges');\n      const responseOngoing = await fetch('http://localhost:3001/ongingChallenges');\n      if (!responseAvailable.ok || !responseOngoing.ok) {\n        throw new Error('Failed to fetch challenges');\n      }\n      const availableChallenges = await responseAvailable.json();\n      const ongoingChallenges = await responseOngoing.json();\n      const formattedChallenges = [...availableChallenges.map(challenge => ({\n        id: challenge.id,\n        title: challenge.name,\n        description: challenge.description,\n        status: 'available'\n      })), ...ongoingChallenges.map(challenge => ({\n        id: challenge.id,\n        title: challenge.name,\n        description: challenge.description,\n        status: 'participating',\n        startDate: challenge.startDate,\n        endDate: challenge.endDate,\n        goalDays: challenge.goalDays,\n        successDays: challenge.successDays\n      }))];\n      setChallenges(formattedChallenges);\n    } catch (error) {\n      console.error('Error fetching challenges:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchChallenges();\n  }, []);\n\n  // 월요일인지 구분\n  //   const isMonday = new Date().getDay() === 1;\n  const isMonday = true;\n\n  // 월요일인지 판단 후 신청 페이지로 넘어가기\n  const joinChallenge = id => {\n    if (isMonday) {\n      // 월요일이면 신청 페이지로 넘어감\n      navigate(`/join?id=${id}`, {\n        state: {\n          id\n        }\n      });\n    } else {\n      // 월요일이 아니면 경고만 표시\n      alert(\"월요일에 참여해주세요!\");\n    }\n  };\n\n  // 참여 완료 후 돌아올 때 해당 챌린지 상태 업데이트\n  useEffect(() => {\n    if (location.state && location.state.participatedChallengeId) {\n      const participatedId = location.state.participatedChallengeId;\n      setChallenges(prevChallenges => prevChallenges.map(challenge => challenge.id === participatedId ? {\n        ...challenge,\n        status: 'participating'\n      } : challenge));\n      // 상태를 반영한 뒤, 주소 상태를 초기화하여 새로고침 시 재적용 안 되도록 함\n      //   navigate('/habit');\n      navigate('/habit', {\n        replace: true\n      });\n    }\n  }, [location.state, navigate]);\n  const manageChallenge = id => {\n    console.log(id);\n    navigate(`/challenge?id=${id}`, {\n      state: {\n        id\n      }\n    });\n  };\n\n  // 참여 중, 참여 가능 챌린지 구분\n  const participatingChallenges = challenges.filter(challenge => challenge.status === 'participating');\n  const availableChallenges = challenges.filter(challenge => challenge.status === 'available');\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uC2B5\\uAD00 \\uCC4C\\uB9B0\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCC38\\uC5EC \\uC911\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: participatingChallenges.length > 0 ? participatingChallenges.map(challenge => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => manageChallenge(challenge.id),\n            children: [challenge.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        }, challenge.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"al\",\n            children: \"\\uCC38\\uC5EC \\uC911\\uC778 \\uCC4C\\uB9B0\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCC38\\uC5EC \\uAC00\\uB2A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableChallenges.length > 0 ? availableChallenges.map(challenge => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => joinChallenge(challenge.id),\n            children: challenge.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)\n        }, challenge.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"al\",\n            children: \"\\uCC38\\uC5EC \\uAC00\\uB2A5\\uD55C \\uCC4C\\uB9B0\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitPage, \"Mj4huaEiNC3XZWvTK4JLQoE9xwU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = HabitPage;\nexport default HabitPage;\nvar _c;\n$RefreshReg$(_c, \"HabitPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","HabitPage","_s","navigate","location","challenges","setChallenges","loading","setLoading","fetchChallenges","responseAvailable","fetch","responseOngoing","ok","Error","availableChallenges","json","ongoingChallenges","formattedChallenges","map","challenge","id","title","name","description","status","startDate","endDate","goalDays","successDays","error","console","isMonday","joinChallenge","state","alert","participatedChallengeId","participatedId","prevChallenges","replace","manageChallenge","log","participatingChallenges","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/32223759/Desktop/Habit/Frontend-hab-eat/src/pages/HabitPage.js"],"sourcesContent":["// import React, { useState } from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport \"./HabitPage.css\";\r\n\r\nexport const HabitPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  const [challenges, setChallenges] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // const [challenges, setChallenges] = useState([\r\n  //   { id: 1, title: '매일 운동', status: 'available' },\r\n  //   { id: 2, title: '건강식 챌린지', status: 'available' },\r\n  //   { id: 3, title: '미라클 모닝', status: 'available' },\r\n  // ]);\r\n\r\n  // // API 호출 함수\r\n  // const fetchChallenges = async () => {\r\n  //   try {\r\n  //     setLoading(true);\r\n  //     const response = await fetch('/api/challenges'); // API URL 수정 필요\r\n  //     const data = await response.json();\r\n\r\n  //     // API에서 가져온 데이터를 상태로 설정\r\n  //     const formattedChallenges = [\r\n  //       ...data.availableChallenges.map(challenge => ({\r\n  //         id: challenge.id,\r\n  //         title: challenge.name,\r\n  //         description: challenge.description,\r\n  //         status: 'available',\r\n  //       })),\r\n  //       ...data.ongingChallenges.map(challenge => ({\r\n  //         id: challenge.id,\r\n  //         title: challenge.name,\r\n  //         description: challenge.description,\r\n  //         status: 'participating',\r\n  //         startDate: challenge.startDate,\r\n  //         endDate: challenge.endDate,\r\n  //         goalDays: challenge.goalDays,\r\n  //         successDays: challenge.successDays,\r\n  //       })),\r\n  //     ];\r\n\r\n  //     setChallenges(formattedChallenges);\r\n  //   } catch (error) {\r\n  //     console.error('Failed to fetch challenges:', error);\r\n  //   } finally {\r\n  //     setLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  const fetchChallenges = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const responseAvailable = await fetch('http://localhost:3001/availableChallenges');\r\n      const responseOngoing = await fetch('http://localhost:3001/ongingChallenges');\r\n  \r\n      if (!responseAvailable.ok || !responseOngoing.ok) {\r\n        throw new Error('Failed to fetch challenges');\r\n      }\r\n  \r\n      const availableChallenges = await responseAvailable.json();\r\n      const ongoingChallenges = await responseOngoing.json();\r\n  \r\n      const formattedChallenges = [\r\n        ...availableChallenges.map(challenge => ({\r\n          id: challenge.id,\r\n          title: challenge.name,\r\n          description: challenge.description,\r\n          status: 'available',\r\n        })),\r\n        ...ongoingChallenges.map(challenge => ({\r\n          id: challenge.id,\r\n          title: challenge.name,\r\n          description: challenge.description,\r\n          status: 'participating',\r\n          startDate: challenge.startDate,\r\n          endDate: challenge.endDate,\r\n          goalDays: challenge.goalDays,\r\n          successDays: challenge.successDays,\r\n        })),\r\n      ];\r\n  \r\n      setChallenges(formattedChallenges);\r\n    } catch (error) {\r\n      console.error('Error fetching challenges:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchChallenges();\r\n  }, []);\r\n\r\n\r\n  // 월요일인지 구분\r\n//   const isMonday = new Date().getDay() === 1;\r\n  const isMonday = true;\r\n\r\n  // 월요일인지 판단 후 신청 페이지로 넘어가기\r\n  const joinChallenge = (id) => {\r\n    if (isMonday) {\r\n      // 월요일이면 신청 페이지로 넘어감\r\n      navigate(`/join?id=${id}`, { state: { id } });\r\n    } else {\r\n      // 월요일이 아니면 경고만 표시\r\n      alert(\"월요일에 참여해주세요!\");\r\n    }\r\n  };\r\n\r\n  // 참여 완료 후 돌아올 때 해당 챌린지 상태 업데이트\r\n  useEffect(() => {\r\n    if (location.state && location.state.participatedChallengeId) {\r\n      const participatedId = location.state.participatedChallengeId;\r\n      setChallenges(prevChallenges =>\r\n        prevChallenges.map(challenge =>\r\n          challenge.id === participatedId \r\n            ? { ...challenge, status: 'participating' }\r\n            : challenge\r\n        )\r\n      );\r\n      // 상태를 반영한 뒤, 주소 상태를 초기화하여 새로고침 시 재적용 안 되도록 함\r\n    //   navigate('/habit');\r\n      navigate('/habit', { replace: true });\r\n    }\r\n  }, [location.state, navigate]);\r\n\r\n\r\n  const manageChallenge = (id) => {\r\n    console.log(id);\r\n    navigate(`/challenge?id=${id}`, { state: { id } });\r\n  };\r\n\r\n  // 참여 중, 참여 가능 챌린지 구분\r\n  const participatingChallenges = challenges.filter(challenge => challenge.status === 'participating');\r\n  const availableChallenges = challenges.filter(challenge => challenge.status === 'available');\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className='title'>습관 챌린지</h1>\r\n      \r\n      <div className=\"section\">\r\n        <h2>참여 중</h2>\r\n        <ul>\r\n          {participatingChallenges.length > 0 ? (\r\n            participatingChallenges.map(challenge => (\r\n              <li key={challenge.id}>\r\n                <button onClick={() => manageChallenge(challenge.id)}>{challenge.title} </button>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <li>\r\n              <p className='al'>참여 중인 챌린지가 없습니다.</p>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"section\">\r\n        <h2>참여 가능</h2>\r\n        <ul>\r\n          {availableChallenges.length > 0 ? (\r\n            availableChallenges.map(challenge => (\r\n              <li key={challenge.id}>\r\n                <button onClick={() => joinChallenge(challenge.id)}>\r\n                  {challenge.title} \r\n                </button>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <li>\r\n              <p className='al'>참여 가능한 챌린지가 없습니다.</p>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HabitPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}