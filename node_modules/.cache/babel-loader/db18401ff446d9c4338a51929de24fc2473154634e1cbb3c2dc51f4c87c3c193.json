{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\32223759\\\\Desktop\\\\Habit\\\\Frontend-hab-eat\\\\src\\\\pages\\\\ChallengePage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport styled from 'styled-components';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCalendar = styled(Calendar)`\n  width: 100%; /* 캘린더를 부모 요소의 너비에 맞게 설정 */\n  max-width: 600px; /* 캘린더의 최대 너비를 제한 */\n  height: 100%; /* 캘린더 높이 비율 */\n  min-height: 500px; /* 최소 높이 설정 */\n//   padding: 20px; /* 내부 여백 */\n  height: 150%;\n  margin: 0 auto; /* 중앙 정렬 */\n//   border: none; /* 기본 테두리 제거 */\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* 그림자 추가 (선택 사항) */\n\n  .react-calendar__tile {\n    background-color: #fdfdfd;\n    color: #8E8E8E;\n    height: 70px; /* 타일의 높이를 늘림 */\n  }\n\n//   .react-calendar__navigation {\n//   display: flex; /* flex를 제거하고 버튼 크기 고정 */\n  \n// }\n\n  .react-calendar__tile--now {\n    background-color: #ffeb3b;\n    font-weight: bold;\n    color: #000;\n  }\n\n  .react-calendar__tile--active {\n    background-color: #00C5A1;\n    color: white;\n  }\n\n  .react-calendar__navigation__label {\n    font-size: 16px;\n    font-weight: bold;\n    color: #00C5A1;\n  }\n\n  button {\n    width: auto;\n  }\n\n  .react-calendar__navigation__arrow {\n    background-color: transparent;\n    border: none;\n    color: #00C5A1;\n  }\n\n//   .react-calendar__month-view__weekdays {\n//     border: 1px soild grey;\n//   }\n`;\n_c = StyledCalendar;\nconst ChallengePage = () => {\n  _s();\n  const [date, setDate] = React.useState(new Date());\n  const handleDateChange = newDate => {\n    setDate(newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCC4C\\uB9B0\\uC9C0 \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledCalendar, {\n      onChange: handleDateChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ChallengePage, \"rW+rxy2mJ1oFEB1Cqg4Z2uVJym0=\");\n_c2 = ChallengePage;\nexport default ChallengePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledCalendar\");\n$RefreshReg$(_c2, \"ChallengePage\");","map":{"version":3,"names":["React","Calendar","styled","jsxDEV","_jsxDEV","StyledCalendar","_c","ChallengePage","_s","date","setDate","useState","Date","handleDateChange","newDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","_c2","$RefreshReg$"],"sources":["C:/Users/32223759/Desktop/Habit/Frontend-hab-eat/src/pages/ChallengePage.js"],"sourcesContent":["import React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport styled from 'styled-components';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst StyledCalendar = styled(Calendar)`\r\n  width: 100%; /* 캘린더를 부모 요소의 너비에 맞게 설정 */\r\n  max-width: 600px; /* 캘린더의 최대 너비를 제한 */\r\n  height: 100%; /* 캘린더 높이 비율 */\r\n  min-height: 500px; /* 최소 높이 설정 */\r\n//   padding: 20px; /* 내부 여백 */\r\n  height: 150%;\r\n  margin: 0 auto; /* 중앙 정렬 */\r\n//   border: none; /* 기본 테두리 제거 */\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* 그림자 추가 (선택 사항) */\r\n\r\n  .react-calendar__tile {\r\n    background-color: #fdfdfd;\r\n    color: #8E8E8E;\r\n    height: 70px; /* 타일의 높이를 늘림 */\r\n  }\r\n\r\n//   .react-calendar__navigation {\r\n//   display: flex; /* flex를 제거하고 버튼 크기 고정 */\r\n  \r\n// }\r\n\r\n  .react-calendar__tile--now {\r\n    background-color: #ffeb3b;\r\n    font-weight: bold;\r\n    color: #000;\r\n  }\r\n\r\n  .react-calendar__tile--active {\r\n    background-color: #00C5A1;\r\n    color: white;\r\n  }\r\n\r\n  .react-calendar__navigation__label {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    color: #00C5A1;\r\n  }\r\n\r\n  button {\r\n    width: auto;\r\n  }\r\n\r\n  .react-calendar__navigation__arrow {\r\n    background-color: transparent;\r\n    border: none;\r\n    color: #00C5A1;\r\n  }\r\n\r\n//   .react-calendar__month-view__weekdays {\r\n//     border: 1px soild grey;\r\n//   }\r\n`;\r\n\r\n\r\nconst ChallengePage = () => {\r\n  const [date, setDate] = React.useState(new Date());\r\n\r\n  const handleDateChange = (newDate) => {\r\n    setDate(newDate);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>챌린지 관리</h1>\r\n\r\n      {/* StyledCalendar 사용 */}\r\n      <StyledCalendar\r\n        onChange={handleDateChange}\r\n        value={date}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChallengePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGH,MAAM,CAACD,QAAQ,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,EAAA,GApDID,cAAc;AAuDpB,MAAME,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;EAElD,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpCJ,OAAO,CAACI,OAAO,CAAC;EAClB,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MAAAY,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGfhB,OAAA,CAACC,cAAc;MACbgB,QAAQ,EAAER,gBAAiB;MAC3BS,KAAK,EAAEb;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACZ,EAAA,CAlBID,aAAa;AAAAgB,GAAA,GAAbhB,aAAa;AAoBnB,eAAeA,aAAa;AAAC,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}